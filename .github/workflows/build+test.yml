name: Build and test for all  platforms

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * *

jobs:
  build_and_test_xcode:
    name: Build and test all  platforms (xcode ${{ matrix.xcodeversion }})
    runs-on: macos-11
    continue-on-error: false
    env:
      xcodebuildcommand: test
      schemename: Earendil
      iosdevice: 'iPhone 12 Pro'
      iosversion: '15.0'
      tvosdevice: 'Apple TV 4K (2nd generation)'
      tvosversion: '15.0'
      watchosdevice: 'Apple Watch Series 6 - 40mm'
      watchosversion: '8.0'
      watchostestenabled: true
      macosdeviceid: '4203018E-580F-C1B5-9525-B745CECA79EB'
      macosversion: '12.0'
    strategy:
      fail-fast: false
      matrix:
        xcodeversion: ['13.0', '12.5.1', '12.4']
        include:
          - xcodeversion: '12.5.1'
            iosdevice: 'iPhone 11 Pro Max'
            iosversion: 14.5
        
    steps:
    - name: xcode switch to ${{ matrix.xcodeversion }}
      uses: maxim-lobanov/setup-xcode@v1.2.3
      with:
        xcode-version: ${{ matrix.xcodeversion }}
    - name: Code Checkout
      uses: actions/checkout@v2
    - name: Check xcodebuild version
      run: xcodebuild -version
    - name: Check xcode embedded SDKs
      run: xcodebuild -showsdks
    - name: Show buildable schemes
      run: xcodebuild -list
    - name: Build and test on  macOS ${{ env.macosversion }}
      run: xcodebuild ${{ env.xcodebuildcommand }} -scheme ${{ env.schemename }} -destination 'platform=macOS,arch=x86_64,id=${{ env.macosdeviceid }}'
    - name: Build and test on  mac Catalyst (on macOS ${{ env.macosversion }})
      run: xcodebuild ${{ env.xcodebuildcommand }} -scheme ${{ env.schemename }} -destination 'platform=macOS,arch=x86_64,variant=Mac Catalyst,id=${{ env.macosdeviceid }}'
    - name: Show eligible build destinations
      run: xcodebuild -showdestinations -scheme Earendil  
    - name: Build and test on  ${{ env.iosdevice }}, ${{ env.iosversion }}
      run: xcodebuild ${{ env.xcodebuildcommand }} -scheme ${{ env.schemename }} -destination 'platform=iOS Simulator,OS=${{ env.iosversion }},name=${{ env.iosdevice }}'
    - name: Build and test on  ${{ env.tvosdevice }}, ${{ env.tvosversion }}
      run: xcodebuild ${{ env.xcodebuildcommand }} -scheme ${{ env.schemename }} -destination 'platform=tvOS Simulator,OS=${{ env.tvosversion }},name=${{ env.tvosdevice }}'
    - name: Build and test on  macOS ${{ env.macosversion }}
      run: xcodebuild ${{ env.xcodebuildcommand }} -scheme ${{ env.schemename }} -destination 'platform=macOS,arch=x86_64,id=${{ env.macosdeviceid }}'
    - name: Build and test on  mac Catalyst (on macOS ${{ env.macosversion }})
      run: xcodebuild ${{ env.xcodebuildcommand }} -scheme ${{ env.schemename }} -destination 'platform=macOS,arch=x86_64,variant=Mac Catalyst,id=${{ env.macosdeviceid }}'
    - name: Build and test on  ${{ env.watchosdevice }}, ${{ env.watchosversion }}
      if: ${{ env.watchostestenabled }}
      run: xcodebuild ${{ env.xcodebuildcommand }} -scheme ${{ env.schemename }} -destination 'platform=watchOS Simulator,OS=${{ env.watchosversion }},name=${{ env.watchosdevice }}'
